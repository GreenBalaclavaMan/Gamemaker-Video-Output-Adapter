<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get PC Video Output Specs

display_width = display_get_width();
display_height = display_get_height();

//Set the view port on screen to the above variables
surface_resize(application_surface, display_width, display_height);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get aspect ratio of the display (ex; 16:9, 4:3, etc)

//get the gcf of the display res
var a=abs(display_width);
var b=abs(display_height);
var new_a, new_b;

while (a != b) &amp;&amp; (a != 0) &amp;&amp; (b != 0) {
    new_a = a mod b;
    new_b = b mod a;
    a = new_a;
    b = new_b;
}

display_gcf = max(a,b);

display_wratio = display_width/display_gcf;
display_hratio = display_height/display_gcf;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set the game camera resolution

//Multiplied against the resolutions below
resolutionMultiplier = 1;

event_user(0);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set vsync and Anti-aliasing

display_reset(8, true);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set fullscreen

window_set_fullscreen(1);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize framerate debug variable

fpsUpdateInterval = 0.25 * room_speed; //Number of frames between framerate updates
framerate = 0;

//Start fps read loop
alarm[0] = fpsUpdateInterval;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Debugging

debugging = true;
show_debug_overlay(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Get current framerate

//Update "framerate" variable
framerate = fps_real;

alarm[0] = fpsUpdateInterval;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control debugging

//Press f3 to enable/disable debugging
if(keyboard_check_pressed(vk_f3)) {
    if(debugging == true) {
    
        //Enable custom &amp; native debugging
        debugging = false;
        show_debug_overlay(false);
    }else{
    
        //Enable custom &amp; native debugging
        debugging = true;
        show_debug_overlay(true);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Set resolution

//Set the resolution associated with screen aspect ratio
//1:1
if(display_wratio == 1) &amp;&amp; (display_hratio == 1) {
    view_wview = 1080*resolutionMultiplier;
    view_hview = 1080*resolutionMultiplier;
}else{
    //4:3
    if(display_wratio == 4) &amp;&amp; (display_hratio == 3) {
        view_wview = 1920*resolutionMultiplier;
        view_hview = 1440*resolutionMultiplier;
    }else{
        //3:2
        if(display_wratio == 3) &amp;&amp; (display_hratio == 2) {
            view_wview = 2256*resolutionMultiplier;
            view_hview = 1504*resolutionMultiplier;
        }else{
            //16:9
            if(display_wratio == 16) &amp;&amp; (display_hratio == 9) {
                view_wview = 1920*resolutionMultiplier;
                view_hview = 1080*resolutionMultiplier;
            }
        }
    }
}

//Apply resolution to application_surface
surface_resize(application_surface, view_wview, view_hview);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw debug info
if(debugging == true) {
    
    //Set draw settings
    draw_set_halign(fa_left);
    draw_set_valign(fa_top);
    draw_set_color(c_white);
    fontSize = 12;
    
    //Draw debug info
    draw_text(view_xview,view_yview + 32 + 0*fontSize, "Display Resolution = " + string(display_width) + "x" + string(display_height));
    draw_text(view_xview,view_yview + 32 + 1*fontSize, "Display Ratio = " + string(display_wratio) + ":" + string(display_hratio));
    draw_text(view_xview,view_yview + 32 + 2*fontSize, "Camera Resolution = " + string(view_wview) + "*" + string(view_hview) + "px");
    draw_text(view_xview,view_yview + 32 + 3*fontSize, "Fps = " + string(framerate));
    
    //Draw controls
    draw_text(view_xview,view_yview + 32 + 5*fontSize, "Controls: debug=[f3]");
    
    //Reset draw settings
    draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
